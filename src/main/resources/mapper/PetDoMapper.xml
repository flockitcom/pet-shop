<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zq.dao.PetDoMapper">
  <resultMap id="BaseResultMap" type="com.zq.bean.PetDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="primary_price" jdbcType="DOUBLE" property="primaryPrice" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="browse" jdbcType="INTEGER" property="browse" />
    <result column="mainimg_url" jdbcType="VARCHAR" property="mainimgUrl" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, type_id, price, primary_price, description, sales, stock, browse, mainimg_url, 
    merchant_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectPetListByTypeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pet
    where type_id = #{typeId,jdbcType=INTEGER}
  </select>
  <select id="selectPetListByKeyword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pet
    where title
    like "%"#{keyword}"%"
  </select>
  <select id="selectPetList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pet
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zq.bean.PetDo">
    insert into pet (id, title, type_id, 
      price, primary_price, description, 
      sales, stock, browse, 
      mainimg_url, merchant_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{price,jdbcType=DOUBLE}, #{primaryPrice,jdbcType=DOUBLE}, #{description,jdbcType=VARCHAR}, 
      #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{browse,jdbcType=INTEGER}, 
      #{mainimgUrl,jdbcType=VARCHAR}, #{merchantId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zq.bean.PetDo" keyProperty="id" useGeneratedKeys="true">
    insert into pet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="primaryPrice != null">
        primary_price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="browse != null">
        browse,
      </if>
      <if test="mainimgUrl != null">
        mainimg_url,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="primaryPrice != null">
        #{primaryPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="browse != null">
        #{browse,jdbcType=INTEGER},
      </if>
      <if test="mainimgUrl != null">
        #{mainimgUrl,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zq.bean.PetDo">
    update pet
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="primaryPrice != null">
        primary_price = #{primaryPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="browse != null">
        browse = #{browse,jdbcType=INTEGER},
      </if>
      <if test="mainimgUrl != null">
        mainimg_url = #{mainimgUrl,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zq.bean.PetDo">
    update pet
    set title = #{title,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      primary_price = #{primaryPrice,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      browse = #{browse,jdbcType=INTEGER},
      mainimg_url = #{mainimgUrl,jdbcType=VARCHAR},
      merchant_id = #{merchantId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="decreaseStock">
    update pet
    set stock = stock - #{amount}
    where id = #{petId} and stock >= #{amount}
  </update>
  <update id="increaseSales">
    update pet
    set sales = sales + #{amount}
    where id = #{petId,jdbcType=INTEGER}
  </update>
</mapper>